/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        //
        // Custom shifted pairs for the Engram layout
        // https://engram.dev/
        //

        apos: apostrophe_and_dquotes {
            compatible = "zmk,behavior-mod-morph";
            label = "APOSTROPHE_AND_DQUOTES";
            #binding-cells = <0>;
            bindings = <&kp APOSTROPHE>, <&kp DOUBLE_QUOTES>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        comma: comma_and_less_then {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_AND_LESS_THEN";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp LESS_THAN>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        period: period_and_greather_then {
            compatible = "zmk,behavior-mod-morph";
            label = "PERIOD_AND_greather_then";
            #binding-cells = <0>;
            bindings = <&kp PERIOD>, <&kp GREATER_THAN>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        slash: slash_and_question {
            compatible = "zmk,behavior-mod-morph";
            label = "SLASH_AND_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        semicolon: semicolon_and_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "SEMICOLON_AND_COLON";
            #binding-cells = <0>;
            bindings = <&kp SEMICOLON>, <&kp COLON>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4       |  5   |                               |  6   |  7    |  8    |  9   |   0   |   PSCRN |
            // | GUI ] |  Q  |  W  |  E   |  R       |  T   |                               |  Y   |  U    |  I    |  O   |   P   |   \ [   |
            // | CTRL `|  A  |  S  |  D   |  F       |  G   |                               |  H   |  J    |  K    |  L   |   ;   |CTRL "'" |
            // | ALT   |  Z  |  X  |  C   |  V       |  B   |   "-"  |              |  "="  |  N   |  M    |  ,    |  .   |   /   | ALT "-" |
            //                     | <-   | RAISE TAB| SHIFT|  LOWER ENTER |  | LOWER SPACE | RAISE| BSPC  | ->    |

            label = "Base";
            bindings = <
&kp EQUAL     &kp N1  &kp N2  &kp N3  &kp N4   &kp N5                                    &kp N6         &kp N7            &kp N8             &kp N9  &kp N0  &kp BSLH
&kp GRAVE     &kp B   &kp Y   &kp O   &kp U    &apos                                     &semicolon     &kp L             &kp D              &kp W   &kp V   &kp Z
&kp LEFT_ALT  &kp C   &kp I   &kp E   &kp A    &comma                                    &period        &kp H             &kp T              &kp S   &kp N   &kp Q
&kp LCTRL     &kp G   &kp X   &kp J   &kp K    &kt MINUS       &none        &none        &slash         &kp R             &kp M              &kp F   &kp P   &to 4
                              &none   &kp TAB  &kp LEFT_SHIFT  &lt 1 RET    &lt 1 SPACE  &kp BACKSPACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | F1 | F2 | F3 | F4 | F5 | F6  |                    | F7  | F8  | F9 |F10 | F11 | F12|
            // |    |    |  3 | 2  | 1  |vol_+|                    |     |     |  ^ |    |     |    |
            // |    |    |  6 | 5  | 4  |vol_-|                    |HOME | <-  |  v | -> | END |    |
            // |    | 0  |  9 | 8  | 7  |vol_0| BT_LAYER |    |    |     |PAUSE|NEXT|PREV|     |    |
            //                |    |    |     |     0    |    |    |SHIFT|     |    |

            label = "Raise";
            bindings = <
&none   &none      &none      &none      &none      &none                                &none           &none             &none         &none       &none      &none
&none   &none      &none      &none      &kp LC(R)  &kp C_VOL_UP                         &kp LC(Y)       &none             &kp UP_ARROW  &none       &kp LC(P)  &none
&trans  &none      &kp LC(S)  &kp N5     &kp LC(F)  &kp C_VOLUME_DOWN                    &kp HOME        &kp LEFT          &kp DOWN      &kp RIGHT   &kp END    &none
&trans  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp K_MUTE         &mo 3     &none   &none           &kp C_PLAY_PAUSE  &kp C_NEXT    &kp C_PREV  &none      &none
                              &trans     &trans     &trans             &trans    &trans  &kp LEFT_SHIFT  &trans            &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower {
            // ------------------------------------------------------------------------------------------------------------
            // |    |    |    |    |         |     |                                      |      |      |    |     |     |     |
            // | F1 | F2 | F3 | F4 | F5      | F6  |                                      |  F7  | F8   | F9 | F10 | F11 | F12 |
            // |    | 1  | 2  | 3  | 4       | 5   |                                      |  6   | 7    | 8  | 9   |  0  |     |
            // |    | !  | @  | #  | $       | %   |    "-"    |              |   "="     |  ^   | &    | *  | (   |  )  |     |
            //                | <- |RAISE TAB|SHIFT|LOWER ENTER|              |LOWER SPACE| RAISE| BSPC | -> |

            label = "lower";
            bindings = <
&none   &none            &none         &none         &none         &none                             &none         &none          &none         &none                 &none                  &none
&trans  &kp F1           &kp F2        &kp F3        &kp F4        &kp F5                            &kp F6        &kp F7         &kp F8        &kp F9                &kp F10                &trans
&trans  &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                      &kp NUMBER_6  &kp NUMBER_7   &kp NUMBER_8  &kp N9                &kp NUMBER_0           &trans
&trans  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT   &kp F11    &kp F12  &kp CARET     &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
                                       &trans        &trans        &trans        &trans     &trans   &trans        &trans         &trans
            >;
        };

        bt_layer {
            bindings = <
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans  &trans  &trans  &trans  &trans  &trans
&trans       &trans        &trans        &trans        &trans        &sys_reset                      &trans  &trans  &trans  &trans  &trans  &trans
&sys_reset   &trans        &trans        &trans        &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&bootloader  &trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                         &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans
            >;

            label = "BT LAYER";
        };

        qwerty_for_rus {
            bindings = <
&trans     &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans     &trans   &trans    &trans
&kp GRAVE  &kp Q   &kp W   &kp E   &kp R   &kp T                     &kp Y   &kp U   &kp I      &kp O    &kp P     &kp LBKT
&trans     &kp A   &kp S   &kp D   &kp F   &kp G                     &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp SQT
&trans     &kp Z   &kp X   &kp C   &kp V   &kp B   &trans    &trans  &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &to 0
                           &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };
    };
};
