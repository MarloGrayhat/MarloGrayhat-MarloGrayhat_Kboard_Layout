/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        space_ret: space_ret {
            compatible = "zmk,behavior-mod-morph";
            label = "SPACE_RET";
            bindings = <&kp SPACE>, <&kp LS(ENTER)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        enter_raise: enter_raise {
            compatible = "zmk,behavior-hold-tap";
            label = "ENTER_RAISE";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <53>;
            tapping-term-ms = <200>;
        };

        //
        // Custom shifted pairs for the Engram layout
        // https://engram.dev/
        //
        one: one_and_pipe {
            compatible = "zmk,behavior-mod-morph";
            label = "ONE_AND_PIPE";
            #binding-cells = <0>;
            bindings = <&kp N1>, <&kp PIPE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        two: two_and_equal {
            compatible = "zmk,behavior-mod-morph";
            label = "TWO_AND_EQUAL";
            #binding-cells = <0>;
            bindings = <&kp N2>, <&kp EQUAL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        three: three_and_tilde {
            compatible = "zmk,behavior-mod-morph";
            label = "THREE_AND_TILDE";
            #binding-cells = <0>;
            bindings = <&kp N3>, <&kp TILDE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        four: four_and_plus {
            compatible = "zmk,behavior-mod-morph";
            label = "FOUR_AND_PLUS";
            #binding-cells = <0>;
            bindings = <&kp N4>, <&kp PLUS>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        five: five_and_less_than {
            compatible = "zmk,behavior-mod-morph";
            label = "FIVE_AND_LESS_THAN";
            #binding-cells = <0>;
            bindings = <&kp N5>, <&kp LESS_THAN>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        six: six_and_greater_than {
            compatible = "zmk,behavior-mod-morph";
            label = "SIX_AND_GREATER_THAN";
            #binding-cells = <0>;
            bindings = <&kp N6>, <&kp GREATER_THAN>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        seven: seven_and_caret {
            compatible = "zmk,behavior-mod-morph";
            label = "SEVEN_AND_CARET";
            #binding-cells = <0>;
            bindings = <&kp N7>, <&kp CARET>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        eight: eight_and_ampersand {
            compatible = "zmk,behavior-mod-morph";
            label = "EIGHT_AND_AMPERSAND";
            #binding-cells = <0>;
            bindings = <&kp N8>, <&kp AMPERSAND>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        nine: nine_and_percent {
            compatible = "zmk,behavior-mod-morph";
            label = "NINE_AND_PERCENT";
            #binding-cells = <0>;
            bindings = <&kp N9>, <&kp PERCENT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        zero: zero_and_asterisk {
            compatible = "zmk,behavior-mod-morph";
            label = "ZERO_AND_ASTERISK";
            #binding-cells = <0>;
            bindings = <&kp N0>, <&kp ASTERISK>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        apos: apostrophe_and_left_parenthesis {
            compatible = "zmk,behavior-mod-morph";
            label = "APOSTROPHE_AND_LEFT_PARENTHESIS";
            #binding-cells = <0>;
            bindings = <&kp APOSTROPHE>, <&kp LEFT_PARENTHESIS>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        dquote: double_quotes_and_right_parenthesis {
            compatible = "zmk,behavior-mod-morph";
            label = "DOUBLE_QUOTES_AND_RIGHT_PARENTHESIS";
            #binding-cells = <0>;
            bindings = <&kp DOUBLE_QUOTES>, <&kp RIGHT_PARENTHESIS>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        comma: comma_and_semicolon {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_AND_SEMICOLON";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMICOLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        period: period_and_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "PERIOD_AND_COLON";
            #binding-cells = <0>;
            bindings = <&kp PERIOD>, <&kp COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        question: question_and_exclamation {
            compatible = "zmk,behavior-mod-morph";
            label = "QUESTION_AND_EXCLAMATION";
            #binding-cells = <0>;
            bindings = <&kp QUESTION>, <&kp EXCLAMATION>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        hash: hash_and_dollar {
            compatible = "zmk,behavior-mod-morph";
            label = "HASH_AND_DOLLAR";
            #binding-cells = <0>;
            bindings = <&kp HASH>, <&kp DOLLAR>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        at: at_and_grave {
            compatible = "zmk,behavior-mod-morph";
            label = "AT_AND_GRAVE";
            #binding-cells = <0>;
            bindings = <&kp AT>, <&kp GRAVE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        slash: slash_and_backslash {
            compatible = "zmk,behavior-mod-morph";
            label = "SLASH_AND_BACKSLASH";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp BACKSLASH>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4       |  5   |                               |  6   |  7    |  8    |  9   |   0   |   PSCRN |
            // | GUI ] |  Q  |  W  |  E   |  R       |  T   |                               |  Y   |  U    |  I    |  O   |   P   |   \ [   |
            // | CTRL `|  A  |  S  |  D   |  F       |  G   |                               |  H   |  J    |  K    |  L   |   ;   |CTRL "'" |
            // | ALT   |  Z  |  X  |  C   |  V       |  B   |   "-"  |              |  "="  |  N   |  M    |  ,    |  .   |   /   | ALT "-" |
            //                     | <-   | RAISE TAB| SHIFT|  LOWER ENTER |  | LOWER SPACE | RAISE| BSPC  | ->    |

            label = "Base";
            bindings = <
&kp ESC                     &one  &two  &three            &kp N4     &kp N5                                    &kp N6         &kp N7        &kp N8             &kp N9      &kp N0     &kp PRINTSCREEN
&mt LEFT_WIN RIGHT_BRACKET  &kp Q         &kp W         &kp E             &kp R      &kp T                                     &kp Y          &kp U         &kp I              &kp O       &kp P      &mt NON_US_BACKSLASH LEFT_BRACKET
&mt LCTRL GRAVE             &kp A         &kp S         &kp D             &kp F      &kp G                                     &kp H          &kp J         &kp K              &kp L       &kp SEMI   &mt LCTRL SQT
&kp LEFT_ALT                &kp Z         &kp X         &kp C             &kp V      &kp B           &kp MINUS    &kp EQUAL    &kp N          &kp M         &kp COMMA          &kp PERIOD  &kp SLASH  &mt RIGHT_ALT MINUS
                                                        &kp LA(LC(LEFT))  &lt 2 TAB  &kp LEFT_SHIFT  &lt 1 RET    &lt 1 SPACE  &kp BACKSPACE  &lt 2 DELETE  &kp LA(LC(RIGHT))
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower {
            // ------------------------------------------------------------------------------------------------------------
            // |    |    |    |    |         |     |                                      |      |      |    |     |     |     |
            // | F1 | F2 | F3 | F4 | F5      | F6  |                                      |  F7  | F8   | F9 | F10 | F11 | F12 |
            // |    | !  | @  | #  | $       | %   |                                      |  ^   | &    | *  | (   |  )  |     |
            // |    | 1  | 2  | 3  | 4       | 5   |    "-"    |              |   "="     |  6   | 7    | 8  | 9   |  0  |     |
            //                | <- |RAISE TAB|SHIFT|LOWER ENTER|              |LOWER SPACE| RAISE| BSPC | -> |

            label = "lower";
            bindings = <
&none   &none            &none         &none         &none         &none                                &none         &none          &none         &none                 &none                  &none
&kp F1  &kp F2           &kp F3        &kp F4        &kp F5        &kp F6                               &kp F7        &kp F8         &kp F9        &kp F10               &kp F11                &kp F12
&trans  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT                          &kp CARET     &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &kp MINUS    &kp PLUS  &kp NUMBER_6  &kp NUMBER_7   &kp NUMBER_8  &kp N9                &kp NUMBER_0           &trans
                                       &trans        &trans        &trans        &trans       &trans    &trans        &trans         &trans
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | F1 | F2 | F3 | F4 | F5 | F6  |                    | F7  | F8  | F9 |F10 | F11 | F12|
            // |    |    |  3 | 2  | 1  |vol_+|                    |     |     |  ^ |    |     |    |
            // |    |    |  6 | 5  | 4  |vol_-|                    |HOME | <-  |  v | -> | END |    |
            // |    | 0  |  9 | 8  | 7  |vol_0| BT_LAYER |    |    |     |PAUSE|NEXT|PREV|     |    |
            //                |    |    |     |     0    |    |    |SHIFT|     |    |

            label = "Raise";
            bindings = <
&kp F1  &kp F2  &kp F3        &kp F4        &kp F5  &kp F6                          &kp F7            &kp F8            &kp F9        &kp F10     &kp F11  &kp F12
&none   &none   &kp N3        &kp N2        &kp N1  &kp C_VOL_UP                    &none             &none             &kp UP_ARROW  &none       &none    &none
&trans  &none   &kp N6        &kp N5        &kp N4  &kp C_VOL_DN                    &kp HOME          &kp LEFT          &kp DOWN      &kp RIGHT   &kp END  &none
&trans  &kp N0  &kp NUMBER_9  &kp NUMBER_8  &kp N7  &kp K_MUTE    &mo 4     &none   &kp LC(LEFT_WIN)  &kp C_PLAY_PAUSE  &kp C_NEXT    &kp C_PREV  &none    &none
                              &trans        &trans  &trans        &kp N0    &trans  &kp LEFT_SHIFT    &trans            &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        numpad {
            bindings = <
&trans   &trans        &trans  &trans  &trans        &trans                          &trans        &trans        &trans        &trans    &trans        &trans
&kp TAB  &kp SLASH     &kp N7  &kp N8  &kp N9        &none                           &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none     &none         &trans
&trans   &kp ASTERISK  &kp N4  &kp N5  &kp N6        &none                           &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans    &kp UP_ARROW  &trans
&trans   &none         &kp N1  &kp N2  &kp NUMBER_3  &none   &trans    &trans        &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp LEFT  &kp DOWN      &kp RIGHT
                               &tog 3  &trans        &trans  &tog 3    &kp NUMBER_0  &trans        &trans        &trans
            >;
        };

        bt_layer {
            bindings = <
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans  &trans  &trans  &trans  &trans  &trans
&trans       &trans        &trans        &trans        &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&sys_reset   &trans        &trans        &trans        &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&bootloader  &trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                         &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans
            >;

            label = "BT LAYER";
        };
    };
};
